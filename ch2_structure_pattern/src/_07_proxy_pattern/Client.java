package _07_proxy_pattern;

/** 프록시 패턴
 *      INTENT: 다른 객체에 대한 접근을 제어하기 위한 대리자(Proxy) 역할을 하는 객체를 둠.
 *              객체에 접근하기 위해서는 항상 프록시를 거쳐야 한다.
 *              => 해당 객체에 대한 접근 제어
 *              => 객체 초기화 지연
 *              => 로깅, 캐싱
 *
 *      장점
 *          기존 코드를 변경하지 않고 새로운 기능을 추가할 수 있다.
 *          기존 코드가 해야 하는 일만 유지할 수 있다.
 *          기능 추가 및 초기화 지연 등으로 다양하게 활용할 수 있다.
 *              => 데코레이터 패턴의 장점과 유사하다.
 *      단점
 *          코드의 복잡도가 증가한다.
 */
public class Client {

}
